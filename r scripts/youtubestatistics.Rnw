\documentclass[a4paper]{article}
\usepackage[utf8]{inputenc}
\usepackage{longtable}
\usepackage{caption}
\captionsetup[figure]{labelfont=bf, textfont=it}
\captionsetup[table]{labelfont=bf, textfont=it}
\usepackage{multicol}
\usepackage{todonotes}


<<setup, cache=FALSE, echo=FALSE, warning=FALSE, message=FALSE>>=
# global chunk options
library(knitr)
opts_chunk$set(cache=FALSE, autodep=TRUE, echo=FALSE, fig.width=7, fig.height=3)
options(digits = 1)
library(ggplot2)
library(reshape)
library(plyr)
library(xtable)
library(corrplot)
@

\title{Video statistik for youtube videoer}
\author{Henrik Skov Midtiby}

\begin{document}
\maketitle


<<message=FALSE>>=
library(ggplot2)
library(scales)
library(tidyr)
library(dplyr)
library(xtable)
@

<<>>=
# Load data generated by ../analyticstestingtwo.py
# Merge them together to a single data frame
playlistContents <- read.table('./playlists.txt', sep=',', header=T)
titles <- read.table('./videoIdsAndTitles.txt', sep=',')
colnames(titles) <- c('videoId', 'videoTitle')
playlistWithTitles <- merge(playlistContents, titles, all.y = TRUE)
rm(playlistContents, titles)

viewsOfVideo <- read.table('./datesAndViews.txt', sep=',')
colnames(viewsOfVideo) <- c('videoId', 'date', 'views')
viewsOfVideo$date <- as.Date(viewsOfVideo$date)
viewsOfVideo$year <- substr(viewsOfVideo$date, 1, 4)
viewsOfVideo$month <- substr(viewsOfVideo$date, 6, 7)
viewsOfVideo$day <- substr(viewsOfVideo$date, 9, 10)
viewsOfVideo$week <- as.numeric( format(viewsOfVideo$date + 3, "%U"))

views <- merge(viewsOfVideo, playlistWithTitles, all.x = TRUE)
views$videoTitleShort <- substr(views$videoTitle, 0, 25)
views$playlistTitleShort <- substr(views$playlistTitle, 0, 20)
rm(viewsOfVideo, playlistWithTitles)

views <- views %>% filter(date > '2014-08-01')
@


\section{Most viewed videos}

\subsection{Five top videos each month}
<<results='asis'>>=
temp <- views  %>% 
  group_by(year, month, videoId, videoTitleShort) %>% 
  summarise(totalViews=sum(views)) %>% 
  group_by(year, month) %>% 
  arrange(-totalViews) %>% 
  slice(1:5) %>% 
  filter(totalViews > 0) %>%
  arrange(-totalViews) %>% 
  select(-videoId, year, month, totalViews, videoTitleShort) %>%
  ungroup()
print(
  xtable(as.data.frame(temp)), 
  include.rownames = FALSE,
  tabular.environment='longtable', 
  floating = FALSE)
@

\subsection{Two top videos for each playlist each week}
<<results='asis'>>=
temp <- views %>% 
  group_by(year, week, videoId, playlistId, videoTitleShort, playlistTitleShort) %>%
  summarise(totalViews=sum(views)) %>% 
  group_by(year, week, playlistId) %>% 
  arrange(-totalViews) %>% 
  slice(1:2) %>% 
  filter(totalViews > 0, !is.na(videoTitleShort)) %>% 
  ungroup() %>% 
  arrange(playlistTitleShort, week, -totalViews) %>%
  select(-videoId, -playlistId, year, week, playlistTitleShort, totalViews, videoTitleShort)
print(
  xtable(as.data.frame(temp), 
        digits = 0), 
  include.rownames = FALSE, 
  tabular.environment='longtable', 
  floating = FALSE)
@

\section{Plots}
<<>>=
# Calculate total number of views
totalViewsPerDate <- views %>% group_by(date, playlistTitle) %>% summarise(totalViews = sum(views))

# General overview of minutes watched on different playlists.
p <- ggplot(totalViewsPerDate) + 
    geom_line(aes(date, totalViews, colour=playlistTitle)) + 
    xlab('Dato') + ylab('Minutter set') +
    scale_x_date(breaks = "1 month", minor_breaks = "1 week", labels=date_format("%d %b %Y")) + 
    theme(legend.title=element_blank())
p
ggsave("plots/01 General overview.pdf", p, width=10, height=6)

cumulatedViewsPerDate = totalViewsPerDate %>% group_by(playlistTitle) %>% mutate(viewsCumulated = cumsum(totalViews))
p <- ggplot(cumulatedViewsPerDate) + 
  geom_line(aes(date, viewsCumulated, colour=playlistTitle)) + 
  xlab('Date') + ylab('Time [min]') + 
  scale_x_date(breaks = "1 month", minor_breaks = "1 week", labels=date_format("%d %b %Y")) +  
  labs(title = 'Total minutes of watched video') + 
  theme(legend.position=c(0.2,0.8), legend.title=element_blank())
p
ggsave("plots/03 Cumulated minutes of watched video.pdf", p, width=10, height=6)

p <- ggplot(cumulatedViewsPerDate) + 
  geom_line(aes(date, viewsCumulated, colour=playlistTitle), alpha=0.5) + 
  geom_line(data=totalViewsPerDate, aes(date, 4*totalViews, colour=playlistTitle), alpha=1.0) + 
  xlab('Date') + ylab('Total time seen [min] or 4 x time seen per day [min]') + 
  scale_x_date(breaks = "1 month", minor_breaks = "1 week", labels=date_format("%d %b %Y")) +
  scale_colour_discrete(name = "Playlist") +
  labs(title = 'Total minutes of watched video') + 
  theme(legend.position=c(0.2,0.8), legend.title=element_blank())
p
ggsave("plots/04 Cumulated minutes of watched video.pdf", p, width=10, height=6)
@
\end{document}